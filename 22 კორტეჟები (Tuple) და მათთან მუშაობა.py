'კორტეჟები'
# შეუძლებელია დამატება წაშლა და ოპერაციები, დაცემენტებული მნიშვნელოვანია
# მნიშვნელოვანი მონაცემებია და იცავს მისი დამახინჯებისგან
# კორტეჟი უფრო ნაკლებ მეხსიერებიანია და არა რედაქტირებადია
'-------------------------------------------------'


x = ()
print(type(x))
y = tuple()
print(type(y))
a = (1, 2, "test")  # ყველა ტიპი შეიძლება ჩავსვათ კორტეჟში
print(type(a))
b = 6, 67.9, True
print(type(b))
a = (9)  # ინტეჯერი
print(type(a))
a = (9,)  # ერთელემენტიანებზეა საჭირო მძიმო
b = "test",  # მძიმის დასმით კორტეჟი იქმნება
print(type(b))
c = tuple(range(9))
print(c)
# tuple ერთ არგუმენტს იძლევა და "=tuple(1,2,3)" შეცდომაა
d = tuple((1, 2, 3))  # შექმნა ფრჩხილით
print(d)
d = tuple([1, 2, 3])  # შექმნა სიით
print(d)
t = tuple((4,))  # d=tuple((4)) არ იმუშავებს
a = 1, 2
b = 3, 4
print(a+b)
print(a*3)
print(9 in c)  # არის 9 ც ში?
print(9 not in c)  # არ არის 9 ც ში?
print(len(c))
print(max(c), min(c))
print(sum(c))

'-------------------------------------'
#  0; 1 ; 2;    3;    4 ;    5;
f = (1, 2, "test", [3, 4], True, 67.8)
print(f)
print(f[0])
print(f[3])
print(f[0])
'კორტეჟი არის შეუცვლელი მონაცემთა ტიპი'
' მაგრამ შეცვლადი ელემენტის შეცვლა შეიძლება კორტეჟში'
print(f[3].append(3))  # [3,4] სიაში მოხდება ჩამატება
a = 1, 2
b = a
print(b)
print(c.index(8))  # რომელ პოზიციაზეა 8
print(f.index(67.8))
a = 1, 2, 3, 1, 4, 4
print(a.count(1))  # რამდენჯერ გვხვდება 1
# ლექ d={[1,2,3]:"Value"}" არ შეიძლება რადგან [1,2,3] შეცვლადია
# კორტეჟი კი <>
d = {("Key1", 1, 6, 70.9): "value"}
print(d)

a = 1, 2, 3
z = list(a)  # კორტეჟი სიად ვაქციე
print(type(z))
z.append(5)  # დავამატე ელემენტი 5

a = tuple(z)  # დავაბრუნე დავაკონვერტირე კორტეჟად
print(type(a))
print(type(z))
'შედარება'
a = (1, 2, 3, "Test", False, 99.99)  # კორტეჟი
b = [1, 2, 3, "Test", False, 99.99]  # სია
# შევადაროთ ზომები
print(a.__sizeof__())  # 36
print(b.__sizeof__())  # 44

'დავიარო ელემენტებზე'
for i in a:   # გამოიტანე ყველა ელემენტი
    print(i)
for i in range(len(a)):  # ა რაოდენობა დაითვალე და გაშალე ა დიაპაზონში
    print(a[i])
'-----------------------------------------------------------------'
